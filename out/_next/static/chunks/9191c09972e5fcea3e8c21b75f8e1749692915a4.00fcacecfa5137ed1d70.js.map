{"version":3,"sources":["webpack:///../../../next-server/lib/amp.ts","webpack:///./components/Navbar.js","webpack:///./components/Layout.js","webpack:///../../../next-server/lib/head.tsx","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///../../../next-server/lib/side-effect.tsx","webpack:///./node_modules/next/link.js","webpack:///../../client/link.tsx","webpack:///../../../next-server/lib/amp-context.ts"],"names":["isInAmpMode","React","AmpStateContext","ampFirst","hybrid","hasQuery","Navbar","className","href","Layout","props","rel","children","defaultHead","inAmpMode","head","charSet","name","content","onlyReactElement","child","list","fragmentChild","fragmentList","METATYPES","reduceComponents","headElements","headElementChildren","headElement","keys","tags","metaTypes","metaCategories","h","unique","key","i","len","metatype","category","categories","c","Effect","Head","ampState","updateHead","reduceComponentsToState","handleStateChange","module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","isServer","mountedInstances","state","component","constructor","emitChange","recordedState","Component","formatUrl","url","formatWithValidation","listeners","IntersectionObserver","window","prefetched","getObserver","observer","entries","entry","cb","rootMargin","p","formatFunc","lastHref","lastAs","lastResult","as","result","memoizedFormatUrl","addBasePath","asHref","e","nodeName","target","parse","origin","isLocal","resolve","scroll","Router","shallow","success","document","this","formatUrls","resolvedHref","parsedAs","ref","getPaths","join","el","err","console","listenToIntersections","paths","Children","onMouseEnter","priority","onClick","passHref"],"mappings":"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","file":"static/chunks/9191c09972e5fcea3e8c21b75f8e1749692915a4.00fcacecfa5137ed1d70.js","sourcesContent":["import React from 'react'\nimport { AmpStateContext } from './amp-context'\n\nexport function isInAmpMode({\n  ampFirst = false,\n  hybrid = false,\n  hasQuery = false,\n} = {}): boolean {\n  return ampFirst || (hybrid && hasQuery)\n}\n\nexport function useAmp(): boolean {\n  // Don't assign the context value to a variable to save bytes\n  return isInAmpMode(React.useContext(AmpStateContext))\n}\n","import Link from 'next/link';\r\n\r\nconst Navbar = () => (\r\n  <nav className=\"navbar navbar-expand navbar-dark bg-dark mb-4\">\r\n    <div className=\"container\">\r\n      <a className=\"navbar-brand\" href=\"#\">BitzPrice</a>\r\n      <div className=\"collapse navbar-collapse\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link href=\"/\"><a className=\"nav-link\">Home</a></Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link href=\"/about\"><a className=\"nav-link\">About</a></Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n);\r\n\r\nexport default Navbar;","import Head from 'next/head';\r\nimport Navbar from './Navbar';\r\n\r\nconst Layout = (props) => (\r\n  <div>\r\n    <Head>\r\n      <title>BitzPrice</title>\r\n      <link rel=\"stylesheet\" href=\"https://bootswatch.com/4/cerulean/bootstrap.min.css\"/>\r\n    </Head>\r\n    <Navbar/>\r\n    <div className=\"container\">\r\n      {props.children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Layout;","import React from 'react'\nimport withSideEffect from './side-effect'\nimport { AmpStateContext } from './amp-context'\nimport { HeadManagerContext } from './head-manager-context'\nimport { isInAmpMode } from './amp'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" />]\n  if (!inAmpMode) {\n    head.push(<meta name=\"viewport\" content=\"width=device-width\" />)\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactChild\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      React.Children.toArray(child.props.children).reduce(\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactChild\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let unique = true\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        unique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          unique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              unique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if (categories.has(category)) {\n              unique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return unique\n  }\n}\n\n/**\n *\n * @param headElements List of multiple <Head> instances\n */\nfunction reduceComponents(\n  headElements: Array<React.ReactElement<any>>,\n  props: WithInAmpMode\n) {\n  return headElements\n    .reduce(\n      (list: React.ReactChild[], headElement: React.ReactElement<any>) => {\n        const headElementChildren = React.Children.toArray(\n          headElement.props.children\n        )\n        return list.concat(headElementChildren)\n      },\n      []\n    )\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(props.inAmpMode))\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      return React.cloneElement(c, { key })\n    })\n}\n\nconst Effect = withSideEffect()\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  return (\n    <AmpStateContext.Consumer>\n      {(ampState) => (\n        <HeadManagerContext.Consumer>\n          {(updateHead) => (\n            <Effect\n              reduceComponentsToState={reduceComponents}\n              handleStateChange={updateHead}\n              inAmpMode={isInAmpMode(ampState)}\n            >\n              {children}\n            </Effect>\n          )}\n        </HeadManagerContext.Consumer>\n      )}\n    </AmpStateContext.Consumer>\n  )\n}\n\nHead.rewind = Effect.rewind\n\nexport default Head\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","import React, { Component } from 'react'\n\nconst isServer = typeof window === 'undefined'\n\ntype State = Array<React.ReactElement<any>> | undefined\n\ntype SideEffectProps = {\n  reduceComponentsToState: <T>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  inAmpMode?: boolean\n}\n\nexport default () => {\n  const mountedInstances: Set<any> = new Set()\n  let state: State\n\n  function emitChange(component: React.Component<SideEffectProps>): void {\n    state = component.props.reduceComponentsToState(\n      [...mountedInstances],\n      component.props\n    )\n    if (component.props.handleStateChange) {\n      component.props.handleStateChange(state)\n    }\n  }\n\n  return class extends Component<SideEffectProps> {\n    // Used when server rendering\n    static rewind() {\n      const recordedState = state\n      state = undefined\n      mountedInstances.clear()\n      return recordedState\n    }\n\n    constructor(props: any) {\n      super(props)\n      if (isServer) {\n        mountedInstances.add(this)\n        emitChange(this)\n      }\n    }\n    componentDidMount() {\n      mountedInstances.add(this)\n      emitChange(this)\n    }\n    componentDidUpdate() {\n      emitChange(this)\n    }\n    componentWillUnmount() {\n      mountedInstances.delete(this)\n      emitChange(this)\n    }\n\n    render() {\n      return null\n    }\n  }\n}\n","module.exports = require('./dist/client/link')\n","declare const __NEXT_DATA__: any\n\nimport React, { Children, Component } from 'react'\nimport { parse, resolve, UrlObject } from 'url'\nimport { PrefetchOptions } from '../next-server/lib/router/router'\nimport {\n  execOnce,\n  formatWithValidation,\n  getLocationOrigin,\n} from '../next-server/lib/utils'\nimport Router from './router'\nimport { addBasePath } from '../next-server/lib/router/router'\n\nfunction isLocal(href: string): boolean {\n  const url = parse(href, false, true)\n  const origin = parse(getLocationOrigin(), false, true)\n\n  return (\n    !url.host || (url.protocol === origin.protocol && url.host === origin.host)\n  )\n}\n\ntype Url = string | UrlObject\ntype FormatResult = { href: string; as?: string }\n\nfunction memoizedFormatUrl(formatFunc: (href: Url, as?: Url) => FormatResult) {\n  let lastHref: null | Url = null\n  let lastAs: undefined | null | Url = null\n  let lastResult: null | FormatResult = null\n  return (href: Url, as?: Url) => {\n    if (lastResult && href === lastHref && as === lastAs) {\n      return lastResult\n    }\n\n    const result = formatFunc(href, as)\n    lastHref = href\n    lastAs = as\n    lastResult = result\n    return result\n  }\n}\n\nfunction formatUrl(url: Url): string {\n  return url && typeof url === 'object' ? formatWithValidation(url) : url\n}\n\nexport type LinkProps = {\n  href: Url\n  as?: Url\n  replace?: boolean\n  scroll?: boolean\n  shallow?: boolean\n  passHref?: boolean\n  prefetch?: boolean\n}\n\nlet observer: IntersectionObserver\nconst listeners = new Map<Element, () => void>()\nconst IntersectionObserver =\n  typeof window !== 'undefined' ? window.IntersectionObserver : null\nconst prefetched: { [cacheKey: string]: boolean } = {}\n\nfunction getObserver(): IntersectionObserver | undefined {\n  // Return shared instance of IntersectionObserver if already created\n  if (observer) {\n    return observer\n  }\n\n  // Only create shared IntersectionObserver if supported in browser\n  if (!IntersectionObserver) {\n    return undefined\n  }\n\n  return (observer = new IntersectionObserver(\n    (entries) => {\n      entries.forEach((entry) => {\n        if (!listeners.has(entry.target)) {\n          return\n        }\n\n        const cb = listeners.get(entry.target)!\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\n          observer.unobserve(entry.target)\n          listeners.delete(entry.target)\n          cb()\n        }\n      })\n    },\n    { rootMargin: '200px' }\n  ))\n}\n\nconst listenToIntersections = (el: Element, cb: () => void) => {\n  const observer = getObserver()\n  if (!observer) {\n    return () => {}\n  }\n\n  observer.observe(el)\n  listeners.set(el, cb)\n  return () => {\n    try {\n      observer.unobserve(el)\n    } catch (err) {\n      console.error(err)\n    }\n    listeners.delete(el)\n  }\n}\n\nclass Link extends Component<LinkProps> {\n  p: boolean\n\n  constructor(props: LinkProps) {\n    super(props)\n    if (process.env.NODE_ENV !== 'production') {\n      if (props.prefetch) {\n        console.warn(\n          'Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/vercel/next.js/prefetch-true-deprecated'\n        )\n      }\n    }\n    this.p = props.prefetch !== false\n  }\n\n  cleanUpListeners = () => {}\n\n  componentWillUnmount(): void {\n    this.cleanUpListeners()\n  }\n\n  getPaths(): string[] {\n    const { pathname } = window.location\n    const { href: parsedHref, as: parsedAs } = this.formatUrls(\n      this.props.href,\n      this.props.as\n    )\n    const resolvedHref = resolve(pathname, parsedHref)\n    return [resolvedHref, parsedAs ? resolve(pathname, parsedAs) : resolvedHref]\n  }\n\n  handleRef(ref: Element): void {\n    if (this.p && IntersectionObserver && ref && ref.tagName) {\n      this.cleanUpListeners()\n\n      const isPrefetched =\n        prefetched[\n          this.getPaths().join(\n            // Join on an invalid URI character\n            '%'\n          )\n        ]\n      if (!isPrefetched) {\n        this.cleanUpListeners = listenToIntersections(ref, () => {\n          this.prefetch()\n        })\n      }\n    }\n  }\n\n  // The function is memoized so that no extra lifecycles are needed\n  // as per https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\n  formatUrls = memoizedFormatUrl((href, asHref) => {\n    return {\n      href: addBasePath(formatUrl(href)),\n      as: asHref ? addBasePath(formatUrl(asHref)) : asHref,\n    }\n  })\n\n  linkClicked = (e: React.MouseEvent): void => {\n    const { nodeName, target } = e.currentTarget as HTMLAnchorElement\n    if (\n      nodeName === 'A' &&\n      ((target && target !== '_self') ||\n        e.metaKey ||\n        e.ctrlKey ||\n        e.shiftKey ||\n        (e.nativeEvent && e.nativeEvent.which === 2))\n    ) {\n      // ignore click for new tab / new window behavior\n      return\n    }\n\n    let { href, as } = this.formatUrls(this.props.href, this.props.as)\n\n    if (!isLocal(href)) {\n      // ignore click if it's outside our scope (e.g. https://google.com)\n      return\n    }\n\n    const { pathname } = window.location\n    href = resolve(pathname, href)\n    as = as ? resolve(pathname, as) : href\n\n    e.preventDefault()\n\n    //  avoid scroll for urls with anchor refs\n    let { scroll } = this.props\n    if (scroll == null) {\n      scroll = as.indexOf('#') < 0\n    }\n\n    // replace state instead of push if prop is present\n    Router[this.props.replace ? 'replace' : 'push'](href, as, {\n      shallow: this.props.shallow,\n    }).then((success: boolean) => {\n      if (!success) return\n      if (scroll) {\n        window.scrollTo(0, 0)\n        document.body.focus()\n      }\n    })\n  }\n\n  prefetch(options?: PrefetchOptions): void {\n    if (!this.p || typeof window === 'undefined') return\n    // Prefetch the JSON page if asked (only in the client)\n    const paths = this.getPaths()\n    // We need to handle a prefetch error here since we may be\n    // loading with priority which can reject but we don't\n    // want to force navigation since this is only a prefetch\n    Router.prefetch(paths[/* href */ 0], paths[/* asPath */ 1], options).catch(\n      (err) => {\n        if (process.env.NODE_ENV !== 'production') {\n          // rethrow to show invalid URL errors\n          throw err\n        }\n      }\n    )\n    prefetched[\n      paths.join(\n        // Join on an invalid URI character\n        '%'\n      )\n    ] = true\n  }\n\n  render() {\n    let { children } = this.props\n    const { href, as } = this.formatUrls(this.props.href, this.props.as)\n    // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag\n    if (typeof children === 'string') {\n      children = <a>{children}</a>\n    }\n\n    // This will return the first child, if multiple are provided it will throw an error\n    const child: any = Children.only(children)\n    const props: {\n      onMouseEnter: React.MouseEventHandler\n      onClick: React.MouseEventHandler\n      href?: string\n      ref?: any\n    } = {\n      ref: (el: any) => {\n        this.handleRef(el)\n\n        if (child && typeof child === 'object' && child.ref) {\n          if (typeof child.ref === 'function') child.ref(el)\n          else if (typeof child.ref === 'object') {\n            child.ref.current = el\n          }\n        }\n      },\n      onMouseEnter: (e: React.MouseEvent) => {\n        if (child.props && typeof child.props.onMouseEnter === 'function') {\n          child.props.onMouseEnter(e)\n        }\n        this.prefetch({ priority: true })\n      },\n      onClick: (e: React.MouseEvent) => {\n        if (child.props && typeof child.props.onClick === 'function') {\n          child.props.onClick(e)\n        }\n        if (!e.defaultPrevented) {\n          this.linkClicked(e)\n        }\n      },\n    }\n\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user\n    if (\n      this.props.passHref ||\n      (child.type === 'a' && !('href' in child.props))\n    ) {\n      props.href = as || href\n    }\n\n    // Add the ending slash to the paths. So, we can serve the\n    // \"<page>/index.html\" directly.\n    if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n      const rewriteUrlForNextExport = require('../next-server/lib/router/rewrite-url-for-export')\n        .rewriteUrlForNextExport\n      if (\n        props.href &&\n        typeof __NEXT_DATA__ !== 'undefined' &&\n        __NEXT_DATA__.nextExport\n      ) {\n        props.href = rewriteUrlForNextExport(props.href)\n      }\n    }\n\n    return React.cloneElement(child, props)\n  }\n}\n\nif (process.env.NODE_ENV === 'development') {\n  const warn = execOnce(console.error)\n\n  // This module gets removed by webpack.IgnorePlugin\n  const PropTypes = require('prop-types')\n  const exact = require('prop-types-exact')\n  // @ts-ignore the property is supported, when declaring it on the class it outputs an extra bit of code which is not needed.\n  Link.propTypes = exact({\n    href: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n    as: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    prefetch: PropTypes.bool,\n    replace: PropTypes.bool,\n    shallow: PropTypes.bool,\n    passHref: PropTypes.bool,\n    scroll: PropTypes.bool,\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      (props: any, propName: string) => {\n        const value = props[propName]\n\n        if (typeof value === 'string') {\n          warn(\n            `Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>`\n          )\n        }\n\n        return null\n      },\n    ]).isRequired,\n  })\n}\n\nexport default Link\n","import React from 'react'\n\nexport const AmpStateContext: React.Context<any> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  AmpStateContext.displayName = 'AmpStateContext'\n}\n"],"sourceRoot":""}